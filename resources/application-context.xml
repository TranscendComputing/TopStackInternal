<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oxm="http://www.springframework.org/schema/oxm"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        ">
    <!-- ============================== -->
    <import resource="commonservices-context.xml" />

    <bean id="servicesPropertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
                <list>
                        <value>classpath*:/*.properties</value>
                        <value>file:${catalina.base}/conf/transcend.properties</value>
                        <value>classpath*:/asinternal.ports</value>
                        <value>classpath*:/compute.ports</value>
                </list>
        </property>
    </bean>
    <util:map id="actions">
    </util:map>

    <bean id="asInternalServiceAsync"
        class="com.msi.tough.query.AsyncServiceImpl">
        <constructor-arg ref="actions"/>
    </bean>

    <bean id="autoscaleInternal" class="com.msi.tough.internal.autoscale.AutoScaleInternalImpl">
        <constructor-arg>
            <map>
                <entry key="GatherInstancesData">
                    <bean class="com.msi.tough.internal.autoscale.actions.GatherInstancesData">
                    </bean>
                </entry>
                <entry key="ProcessAutoScaling">
                    <bean class="com.msi.tough.internal.autoscale.actions.ProcessAutoScaling">
                    </bean>
                </entry>
                <entry key="ProcessTerminatedInstances">
                    <bean
                        class="com.msi.tough.internal.autoscale.actions.ProcessTerminatedInstances">
                    </bean>
                </entry>
                <entry key="PublishASMetrics">
                    <bean class="com.msi.tough.internal.autoscale.actions.PublishASMetrics">
                    </bean>
                </entry>
                <entry key="BootstrapDBInstance">
                    <bean class="com.msi.tough.internal.autoscale.actions.BootstrapDBInstance">
                    </bean>
                </entry>
                <entry key="CreateAccount">
                    <bean class="com.msi.tough.internal.autoscale.actions.CreateAccount">
                    </bean>
                </entry>
                <entry key="DescribeAccounts">
                    <bean class="com.msi.tough.internal.autoscale.actions.DescribeAccounts">
                    </bean>
                </entry>
                <entry key="DeleteAccount">
                    <bean class="com.msi.tough.internal.autoscale.actions.DeleteAccount">
                    </bean>
                </entry>
                <entry key="UpdateAccount">
                    <bean class="com.msi.tough.internal.autoscale.actions.UpdateAccount">
                    </bean>
                </entry>
                <entry key="RegisterInstance">
                    <bean class="com.msi.tough.internal.autoscale.actions.RegisterInstance">
                    </bean>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="endpoint" class="java.lang.String">
        <constructor-arg value="ActionIn"/>
    </bean>
    <bean id="rawEndpoint" class="java.lang.String">
        <constructor-arg value="DirectToZMQEntry"/>
    </bean>

    <bean id="workflow" factory-method="getInstance"
    class="com.msi.tough.workflow.core.MuleWorkflow">
    </bean>

    <bean id="recvEndpoint" class="java.lang.String">
        <constructor-arg value="tcp://*:${asinternal.port}"/>
    </bean>

    <bean id="workflowReceiver" init-method="init" destroy-method="destroy"
    class="com.msi.tough.workflow.core.WorkflowReceiver">
    </bean>

    <!-- compute setup, for creating/describing instances -->

    <util:list id="computePossibleTypes">
        <value>com.msi.tough.message.CoreMessage$ErrorResult</value>
        <value>com.transcend.compute.message.RunInstancesMessage$RunInstancesResponseMessage</value>
        <value>com.transcend.compute.message.DescribeInstancesMessage$DescribeInstancesResponseMessage</value>
    </util:list>

    <bean id="remoteEndpoint" class="java.lang.String">
        <constructor-arg value="tcp://${compute.host}:${compute.port}"/>
    </bean>

    <bean id="returnAddress" class="java.lang.String">
        <constructor-arg value="tcp://${internal.service.host}:${response.compute.port}"/>
    </bean>

    <bean id="remoteComputeWorkflow" factory-method="getInstance" destroy-method="destroy"
    class="com.msi.tough.workflow.core.RemoteWorkflow">
        <property name="remoteEndpoint" ref="remoteEndpoint" />
        <property name="recvEndpoint" value="tcp://*:${response.compute.port}" />
        <property name="returnAddress" ref="returnAddress" />
        <property name="possibleTypes" ref="computePossibleTypes"/>
    </bean>

    <bean id="remoteIgniter"
        class="com.msi.tough.workflow.core.RemoteIgniter">
    </bean>

    <bean id="toCompute"
        class="com.msi.tough.workflow.WorkflowSubmitter">
        <property name="workflow" ref="remoteComputeWorkflow"/>
        <property name="workflowIgniter" ref="remoteIgniter"/>
    </bean>

    <!-- Run common annotations; e.g. PostConstruct/PreDestroy. -->
    <context:annotation-config />

    <bean id="appctx" factory-method="getInstanceForInjection"
        class="com.msi.tough.core.Appctx">
        <property name="configuration" ref="configuration"/>
    </bean>

    <bean class="com.msi.tough.core.AppctxInjector"/>

    <bean id="hibernateUtil" class="com.msi.tough.core.HibernateUtil">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="txManager"/>

    <!-- Redefine session factory; this app uses annotations for transactions -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="msiDS" />
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
        <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"></property>
        <property name="hibernateProperties">
            <value>hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
                hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
                hibernate.show_sql=false
                hibernate.hbm2ddl.auto=update
            </value>
        </property>
    </bean>

</beans>
